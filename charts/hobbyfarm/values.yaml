admin:
  image: hobbyfarm/admin-ui:v2.0.1
  # configMapName: admin-config
  # config:
    # title: HobbyFarm Administration
    # favicon: /assets/default/favicon.png
    # login:
      # logo: /assets/default/rancher-labs-stacked-color.svg
      # background: assets/default/vault.jpg
    # logo: /assets/default/logo.svg
ui:
  image: hobbyfarm/ui:v2.0.1
  # configMapName: ui-config
  # config:
    # title: HobbyFarm Learn
    # favicon: /assets/default/favicon.png
    # login:
      # logo: /assets/default/rancher-labs-stacked-color.svg
      # background: /assets/default/login_container_farm.svg
    # logo: /assets/default/logo.svg
    # about: 
      # title: About HobbyFarm
      # body: HobbyFarm is a browser-based technology training tool developed at github.com/hobbyfarm 
      # buttons:
        # - title: Example Title
        #   url: https://github.com/hobbyfarm
        # - title: Example Title 2
        #   url: https://github.com/hobbyfarm/hobbyfarm
  # custom: |
    # .custom-css {
      # /* Some custom css */
    # }
gargantua:
  image: hobbyfarm/gargantua:v2.0.3
  logLevel: "0"
  dynamicBaseNamePrefix: "dynamic"
  scheduledBaseNamePrefix: "scheduled"
  serviceAccountName: "hobbyfarm-gargantua"
  apiPort: 80
  webhook:
    containerPort: 444
    servicePort: 443 # needs to remain 443, see https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definition-versioning/#deploy-the-conversion-webhook-servicev2

# Use guacamole to provision windows VMs (optional)
# guac:
#   image: ***to be published***

shell:
  replicas: 1

# use insecure protocols (e.g., for local development)
insecure: false

ingress:
  enabled: false
  annotations: {}
  tls:
    enabled: true
    # secrets:
    #   backend: backend-tls-secret # api/controller server
    #   admin: admin-tls-secret # admin ui
    #   ui: ui-tls-secret # user frontend "learn" ui
  hostnames:
    # ui: example.com
    # admin: admin.example.com
    # backend: hf.example.com
    # shell: shell.example.com
    ranchervm: {}
      # frontend: vm.example.com
      # backend: vmapi.example.com

# https://github.com/rancher/terraform-controller
terraform:
  enabled: true
  executor:
    image: rancher/terraform-controller-executor
    tag: "v0.0.13-alpha1"
  controller:
    image: rancher/terraform-controller
    tag: "v0.0.13-alpha1"
    threads: 2

# https://github.com/hobbyfarm/vm
ranchervm:
  enabled: false
  nic: "eth0"
  bridge: "en0"
  # bridge: "docker0"
  image:
    vm: rancher/vm:v0.2.0
    frontend: rancher/vm-frontend:v0.2.0
    novnc: rancher/vm-novnc:v0.2.0
    tools: rancher/vm-tools:v0.2.0
